/*!
 * 
 * phina-logger 0.1.0
 * MIT Licensed
 * Copyright (C) pentamania
 * 
 */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("phina.js"));else if("function"==typeof define&&define.amd)define(["phina.js"],t);else{var r="object"==typeof exports?t(require("phina.js")):t(e.phina);for(var i in r)("object"==typeof exports?exports:e)[i]=r[i]}}(this,function(e){return function(e){var t={};function r(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(i,o,function(t){return e[t]}.bind(null,o));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(t,r){t.exports=e},function(e,t,r){"use strict";r.r(t);var i=r(0),o=i.define("phina.util.Logger",{superClass:i.util.EventDispatcher,init:function(e){this.superInit(),this._logs=[],this._maxLength=e||16,this._cachedLogString=""},push:function(){this._cachedLogString="",Array.prototype.slice.call(arguments).forEach(function(e){this._logs.push(e),this._maxLength<this._logs.length&&this._logs.shift(),this.flare("logged",e)}.bind(this))},clear:function(){this._cachedLogString="",this._logs.length=0,this.flare("clear")},_accessor:{logString:{get:function(){if(""!==this._cachedLogString)return this._cachedLogString;var e="";return this._logs.forEach(function(t){e+=JSON.stringify(t).replace(/"|{|}/g,"")+"\n"}),this._cachedLogString=e,e}}}}),n=i.define("phina.display.LogLabelArea",{superClass:i.ui.LabelArea,init:function(e){e={}.$safe(e,n.defaults),this.superInit(e),this._logger=o(e.maxLog),e.dragScroll&&this.setDragScroll(e.dragScroll),this._removePrevScroll=null},setDragScroll:function(e){this._removePrevScroll&&this._removePrevScroll();var t=function(t){e=Number.isNaN(e)?2:e;var r=t.pointer.dy*e;this.scrollY=Math.max(this.scrollY+r,0)};return this.setInteractive(!0).on("pointmove",t),this._removePrevScroll=function(){this.off("pointmove",t)}.bind(this),this},add:function(){return this._logger.push.apply(this._logger,arguments),this.text=this._logger.logString,this},clear:function(){return this._logger.clear(),this.text="",this},_accessor:{logs:{get:function(){return this._logger._logs}}},_static:{defaults:{text:"Logs will be shown here!",fontSize:14,fill:"limegreen",backgroundColor:"black",maxLog:16,dragScroll:!1}}})}])});
//# sourceMappingURL=phina-logger.min.js.map